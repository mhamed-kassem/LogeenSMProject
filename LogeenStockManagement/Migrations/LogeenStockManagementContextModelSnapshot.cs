// <auto-generated />
using System;
using LogeenStockManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogeenStockManagement.Migrations
{
    [DbContext(typeof(LogeenStockManagementContext))]
    partial class LogeenStockManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogeenStockManagement.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Category__737584F6080FF870")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("BalanceOutstand")
                        .HasColumnType("float");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Phone")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("TypeId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Client__5C7E359ECC686610")
                        .IsUnique();

                    b.ToTable("Client");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title");

                    b.Property<int?>("UnitCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("HaveAccess")
                        .HasColumnType("bit")
                        .HasColumnName("Have_Access");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("NationalId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("NationalID");

                    b.Property<decimal?>("Phone")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("Photo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("StockId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Employee__5C7E359E8C71BBFF")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "NationalId" }, "UQ__Employee__E9AA321ADDC4258D")
                        .IsUnique();

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("StockId");

                    b.HasIndex("TypeId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseType");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExpiredProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ExpiredProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExportPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<double>("PayedBalance")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseBillId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("PurchaseBillId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ExportPayment");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ImportPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<double>("PayedBalance")
                        .HasColumnType("float");

                    b.Property<int>("SaleBillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("SaleBillId");

                    b.ToTable("ImportPayment");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "JobTitle" }, "UQ__Job__44C68B9F7F6246B3")
                        .IsUnique();

                    b.ToTable("Job");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('MoneySafe')");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__PaymentM__737584F6D15096D9")
                        .IsUnique();

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ExpiryPeriod")
                        .HasColumnType("int");

                    b.Property<int>("MiniAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PurchasingPrice")
                        .HasColumnType("float");

                    b.Property<double>("SellingPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.HasIndex(new[] { "Barcode" }, "UQ__Product__177800D366E65269")
                        .IsUnique()
                        .HasFilter("[Barcode] IS NOT NULL");

                    b.HasIndex(new[] { "Name" }, "UQ__Product__737584F6B538FB8E")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ProductTransfered", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("TransferOperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferOperationId");

                    b.ToTable("ProductTransfered");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("BillTotal")
                        .HasColumnType("float");

                    b.Property<string>("BillType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('Cash')");

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("Paidup")
                        .HasColumnType("float")
                        .HasColumnName("paidup");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<double?>("Remaining")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("StockId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TaxId");

                    b.HasIndex(new[] { "BillCode" }, "UQ__Purchase__1CC9F83EA0F070C4")
                        .IsUnique()
                        .HasFilter("[BillCode] IS NOT NULL");

                    b.ToTable("PurchaseBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("PurchaseBillId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBillId");

                    b.ToTable("PurchaseProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseReturnsBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("NetMoney")
                        .HasColumnType("float");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int")
                        .HasColumnName("payMethodId");

                    b.Property<int>("PurchaseBillId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("PurchaseBillId");

                    b.HasIndex("TaxId");

                    b.HasIndex(new[] { "Code" }, "UQ__Purchase__A25C5AA7BFF1D1B6")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchaseReturnsBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ReturnPurchaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountReturned")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseProductId")
                        .HasColumnType("int");

                    b.Property<int>("ReturnPurchaseBillId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseProductId");

                    b.HasIndex("ReturnPurchaseBillId");

                    b.ToTable("ReturnPurchaseProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ReturnSaleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountReturned")
                        .HasColumnType("int");

                    b.Property<int>("ReturnSaleBillId")
                        .HasColumnType("int");

                    b.Property<int?>("SaleProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReturnSaleBillId");

                    b.HasIndex("SaleProductId");

                    b.ToTable("ReturnSaleProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("BillTotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("BillType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValueSql("('Cash')");

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<double?>("Paidup")
                        .HasColumnType("float")
                        .HasColumnName("paidup");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<double?>("Remaining")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("StockId");

                    b.HasIndex("TaxId");

                    b.HasIndex(new[] { "BillCode" }, "UQ__SaleBill__1CC9F83E0ACB23B2")
                        .IsUnique()
                        .HasFilter("[BillCode] IS NOT NULL");

                    b.ToTable("SaleBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBillProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountToSell")
                        .HasColumnType("int");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int>("SaleBillId")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SaleBillId");

                    b.ToTable("SaleBillProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SalesReturnsBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("NetMoney")
                        .HasColumnType("float");

                    b.Property<int>("PayMethodId")
                        .HasColumnType("int");

                    b.Property<int>("SaleBillId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PayMethodId");

                    b.HasIndex("SaleBillId");

                    b.HasIndex("TaxId");

                    b.HasIndex(new[] { "Code" }, "UQ__SalesRet__A25C5AA71E2BDB20")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("SalesReturnsBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Stock__737584F658277066")
                        .IsUnique();

                    b.HasIndex(new[] { "Address" }, "UQ__Stock__7D0C3F3299E766D4")
                        .IsUnique();

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.StockProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductionDate")
                        .HasColumnType("date");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "StockId", "ProductId", "ProductionDate" }, "UniqueProduct")
                        .IsUnique()
                        .HasFilter("[StockId] IS NOT NULL AND [ProductId] IS NOT NULL");

                    b.ToTable("StockProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("BalanceDebit")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex(new[] { "Phone" }, "UQ__Supplier__5C7E359EACB37D5D")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.HasIndex(new[] { "Name" }, "UQ__Supplier__737584F65B86B2E0")
                        .IsUnique();

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Tax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Name" }, "UQ__Tax__737584F6044960F3")
                        .IsUnique();

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.TraderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TypeName" }, "UQ__TraderTy__D4E7DFA8847B954C")
                        .IsUnique();

                    b.ToTable("TraderType");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.TransferOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FromStockId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ToStockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FromStockId");

                    b.HasIndex("ToStockId");

                    b.ToTable("TransferOperation");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Client", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Discount", "Discount")
                        .WithMany("Clients")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("ClientDiscountFK");

                    b.HasOne("LogeenStockManagement.Models.TraderType", "Type")
                        .WithMany("Clients")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("ClientTypeFK");

                    b.Navigation("Discount");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Employee", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId")
                        .HasConstraintName("EmployeeJobFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Stock", "Stock")
                        .WithMany("Employees")
                        .HasForeignKey("StockId")
                        .HasConstraintName("EmployeeStockFK")
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Expense", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Employee", "Employee")
                        .WithMany("Expenses")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("ExpenseEmployeFK");

                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("Expenses")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("ExpensePayMethodFK");

                    b.HasOne("LogeenStockManagement.Models.Stock", "Stock")
                        .WithMany("Expenses")
                        .HasForeignKey("StockId")
                        .HasConstraintName("ExpenseStockFK");

                    b.HasOne("LogeenStockManagement.Models.ExpenseType", "Type")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("ExpenseTypeFK");

                    b.Navigation("Employee");

                    b.Navigation("PayMethod");

                    b.Navigation("Stock");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExpiredProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Product", "Product")
                        .WithMany("ExpiredProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("ExpiredProductTypeFK");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExportPayment", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("ExportPayments")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("OutPayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.PurchaseBill", "PurchaseBill")
                        .WithMany("ExportPayments")
                        .HasForeignKey("PurchaseBillId")
                        .HasConstraintName("OutPayPurchaseBillFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Supplier", "Supplier")
                        .WithMany("ExportPayments")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("OutPaySupplierFK")
                        .IsRequired();

                    b.Navigation("PayMethod");

                    b.Navigation("PurchaseBill");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ImportPayment", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Client", "Client")
                        .WithMany("ImportPayments")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("InPayClientFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("ImportPayments")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("InPayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.SaleBill", "SaleBill")
                        .WithMany("ImportPayments")
                        .HasForeignKey("SaleBillId")
                        .HasConstraintName("InPayBillFK")
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("PayMethod");

                    b.Navigation("SaleBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Product", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("ProductCategoryFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Discount", "Discount")
                        .WithMany("Products")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("ProductDiscountFK");

                    b.Navigation("Category");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ProductTransfered", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Product", "Product")
                        .WithMany("ProductTransfereds")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("ProductTransferedTypeFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.TransferOperation", "TransferOperation")
                        .WithMany("ProductTransfereds")
                        .HasForeignKey("TransferOperationId")
                        .HasConstraintName("ProductTransferOPerationFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferOperation");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseBill", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("PurchaseBills")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("PurchasePayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Stock", "Stock")
                        .WithMany("PurchaseBills")
                        .HasForeignKey("StockId")
                        .HasConstraintName("PurchaseStock")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Supplier", "Supplier")
                        .WithMany("PurchaseBills")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("PurchaseSupplierFK");

                    b.HasOne("LogeenStockManagement.Models.Tax", "Tax")
                        .WithMany("PurchaseBills")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("PurchaseTaxFK");

                    b.Navigation("PayMethod");

                    b.Navigation("Stock");

                    b.Navigation("Supplier");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Product", "Product")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("PurchaseProductTypeFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.PurchaseBill", "PurchaseBill")
                        .WithMany("PurchaseProducts")
                        .HasForeignKey("PurchaseBillId")
                        .HasConstraintName("PurchaseProductBillFK")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("PurchaseBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseReturnsBill", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("PurchaseReturnsBills")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("PurchaseReturnPayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.PurchaseBill", "PurchaseBill")
                        .WithMany("PurchaseReturnsBills")
                        .HasForeignKey("PurchaseBillId")
                        .HasConstraintName("PurchaseReturnPurchaseBillFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Tax", "Tax")
                        .WithMany("PurchaseReturnsBills")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("PurchaseReturnTaxFK");

                    b.Navigation("PayMethod");

                    b.Navigation("PurchaseBill");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ReturnPurchaseProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.PurchaseProduct", "PurchaseProduct")
                        .WithMany("ReturnPurchaseProducts")
                        .HasForeignKey("PurchaseProductId")
                        .HasConstraintName("PurchaseProductToReturnFK");

                    b.HasOne("LogeenStockManagement.Models.PurchaseReturnsBill", "ReturnPurchaseBill")
                        .WithMany("ReturnPurchaseProducts")
                        .HasForeignKey("ReturnPurchaseBillId")
                        .HasConstraintName("ReturnPurchaseBillFK")
                        .IsRequired();

                    b.Navigation("PurchaseProduct");

                    b.Navigation("ReturnPurchaseBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ReturnSaleProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.SalesReturnsBill", "ReturnSaleBill")
                        .WithMany("ReturnSaleProducts")
                        .HasForeignKey("ReturnSaleBillId")
                        .HasConstraintName("ReturnSaleBillFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.SaleBillProduct", "SaleProduct")
                        .WithMany("ReturnSaleProducts")
                        .HasForeignKey("SaleProductId")
                        .HasConstraintName("SaleProductFK");

                    b.Navigation("ReturnSaleBill");

                    b.Navigation("SaleProduct");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBill", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Client", "Client")
                        .WithMany("SaleBills")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("SaleClientFK");

                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("SaleBills")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("SalePayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Stock", "Stock")
                        .WithMany("SaleBills")
                        .HasForeignKey("StockId")
                        .HasConstraintName("SaleStockFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Tax", "Tax")
                        .WithMany("SaleBills")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("SaleTaxFK");

                    b.Navigation("Client");

                    b.Navigation("PayMethod");

                    b.Navigation("Stock");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBillProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Product", "Product")
                        .WithMany("SaleBillProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("SaleProductTypeFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.SaleBill", "SaleBill")
                        .WithMany("SaleBillProducts")
                        .HasForeignKey("SaleBillId")
                        .HasConstraintName("SaleBillProductBillFK")
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SaleBill");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SalesReturnsBill", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.PaymentMethod", "PayMethod")
                        .WithMany("SalesReturnsBills")
                        .HasForeignKey("PayMethodId")
                        .HasConstraintName("SaleReturnPayMethodFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.SaleBill", "SaleBill")
                        .WithMany("SalesReturnsBills")
                        .HasForeignKey("SaleBillId")
                        .HasConstraintName("SaleReturnSaleBillFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Tax", "Tax")
                        .WithMany("SalesReturnsBills")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("SaleReturnTaxFK");

                    b.Navigation("PayMethod");

                    b.Navigation("SaleBill");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.StockProduct", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Product", "Product")
                        .WithMany("StockProducts")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("ProductTypeFK");

                    b.HasOne("LogeenStockManagement.Models.Stock", "Stock")
                        .WithMany("StockProducts")
                        .HasForeignKey("StockId")
                        .HasConstraintName("ProductStockFK");

                    b.Navigation("Product");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Supplier", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.TraderType", "Type")
                        .WithMany("Suppliers")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("SupplierTypeFK")
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.TransferOperation", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Employee", "Employee")
                        .WithMany("TransferOperations")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("TransferEmployeeFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Stock", "FromStock")
                        .WithMany("TransferOperationFromStocks")
                        .HasForeignKey("FromStockId")
                        .HasConstraintName("TransferFromStockFK")
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.Stock", "ToStock")
                        .WithMany("TransferOperationToStocks")
                        .HasForeignKey("ToStockId")
                        .HasConstraintName("TransferToStockFK")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FromStock");

                    b.Navigation("ToStock");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.User", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogeenStockManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LogeenStockManagement.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Client", b =>
                {
                    b.Navigation("ImportPayments");

                    b.Navigation("SaleBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Discount", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Employee", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("TransferOperations");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.ExpenseType", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PaymentMethod", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("ExportPayments");

                    b.Navigation("ImportPayments");

                    b.Navigation("PurchaseBills");

                    b.Navigation("PurchaseReturnsBills");

                    b.Navigation("SaleBills");

                    b.Navigation("SalesReturnsBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Product", b =>
                {
                    b.Navigation("ExpiredProducts");

                    b.Navigation("ProductTransfereds");

                    b.Navigation("PurchaseProducts");

                    b.Navigation("SaleBillProducts");

                    b.Navigation("StockProducts");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseBill", b =>
                {
                    b.Navigation("ExportPayments");

                    b.Navigation("PurchaseProducts");

                    b.Navigation("PurchaseReturnsBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseProduct", b =>
                {
                    b.Navigation("ReturnPurchaseProducts");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.PurchaseReturnsBill", b =>
                {
                    b.Navigation("ReturnPurchaseProducts");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBill", b =>
                {
                    b.Navigation("ImportPayments");

                    b.Navigation("SaleBillProducts");

                    b.Navigation("SalesReturnsBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SaleBillProduct", b =>
                {
                    b.Navigation("ReturnSaleProducts");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.SalesReturnsBill", b =>
                {
                    b.Navigation("ReturnSaleProducts");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Stock", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Expenses");

                    b.Navigation("PurchaseBills");

                    b.Navigation("SaleBills");

                    b.Navigation("StockProducts");

                    b.Navigation("TransferOperationFromStocks");

                    b.Navigation("TransferOperationToStocks");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Supplier", b =>
                {
                    b.Navigation("ExportPayments");

                    b.Navigation("PurchaseBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.Tax", b =>
                {
                    b.Navigation("PurchaseBills");

                    b.Navigation("PurchaseReturnsBills");

                    b.Navigation("SaleBills");

                    b.Navigation("SalesReturnsBills");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.TraderType", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("LogeenStockManagement.Models.TransferOperation", b =>
                {
                    b.Navigation("ProductTransfereds");
                });
#pragma warning restore 612, 618
        }
    }
}
